
import java.awt.Color;
import java.awt.FlowLayout;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author aldan
 */
public class GameBoard extends javax.swing.JFrame {

    Socket sock;
    SendThread sendThread;
    Thread thread;
    RecieveThread recieveThread;
    Thread thread2;
    List<JLabel> stringBoard;
    int boardX, boardY;
    ArrayList<PlayerClient> playerClient;

    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        initComponents();
        stringBoard = new ArrayList<JLabel>();
        playerClient = new ArrayList<PlayerClient>();
        createBoard(5, 5);
        playerClient.add(new PlayerClient("X", 1));
        playerClient.add(new PlayerClient("Y", 5));
        
        int portNumber = 111;
        String host = "127.0.0.1";

        try {
            sock = new Socket(host, portNumber);
            sendThread = new SendThread(sock);
            thread = new Thread(sendThread);
            thread.start();
            recieveThread = new RecieveThread(sock, this);
            thread2 = new Thread(recieveThread);
            thread2.start();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void setLabel(String name) {
//        jLabel1.setText(name);
    }

    public void placePlayer(String name, int position) {
        boardRefresh();
    }

    public void movePlayer(String name, int position) {
        for (int i = 0; i < playerClient.size(); i++) {
            if (playerClient.get(i).getName().equals(name)) {
                playerClient.get(i).setPosition(position);
            }
        }
        System.out.println(name+position);
        boardRefresh();
    }

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    public void createBoard(int x, int y) {
        this.boardX = x;
        this.boardY = y;
        int idx = (x * y);
        boolean reverse = false;
        for (int i = 0; i < y; i++) {
            for (int j = 0; j < x; j++) {
                String sLabel = "<html>" + idx + "</html>";
                JLabel lab1 = new JLabel(sLabel, JLabel.LEFT);
                JPanel p = new JPanel();
                p.setBackground(Color.white);
                p.setBounds(10 + (j * 60), 10 + (i * 60), 50, 50);
                p.setLayout(new FlowLayout());
                p.add(lab1);
                stringBoard.add(lab1);
                p.setAlignmentX(100);
                p.setAlignmentX(100);
                this.add(p);
                if (reverse) {
                    idx++;
                } else {
                    idx--;
                }
            }
            reverse = !reverse;
            if (reverse) {
                idx -= x - 1;
            } else {
                idx -= x + 1;
            }
        }
        boardRefresh();
    }

    public void boardRefresh() {
        int total = (this.boardX * this.boardY);
        for (int i = 1; i <= total; i++) {
            String sLabel = "";
            String player = "";
            for (int j = 0; j < playerClient.size(); j++) {
                if(playerClient.get(j).getPosition() == i){
                    if (player == "") {
                        player += playerClient.get(j).getName();
                    }else{
                        player += ","+playerClient.get(j).getName();
                    }
                }
            }
            sLabel = "<html>" + i + "<br>"+player+"</html>";
            stringBoard.get((this.boardX * this.boardY) - i).setText(sLabel);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(338, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addComponent(jLabel1))
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(115, 115, 115))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel1)
                .addGap(78, 78, 78)
                .addComponent(jButton1)
                .addGap(42, 42, 42)
                .addComponent(jButton2)
                .addGap(0, 75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        sendThread.print.println("1");
        sendThread.print.flush();
        boardRefresh();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        sendThread.print.println("2");
        sendThread.print.flush();
        boardRefresh();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
